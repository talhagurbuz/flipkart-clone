[{"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js":"1","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.js":"2","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signup\\index.js":"3","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signin\\index.js":"4","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Home\\index.js":"5","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.js":"6","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Input\\index.js":"7","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reportWebVitals.js":"8","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\index.js":"9","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\store\\index.js":"10","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\index.js":"11","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\auth.actions.js":"12","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\auth.reducers.js":"13","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js":"14","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js":"15","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\constants.js":"16","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js":"17","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\index.js":"18","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js":"19","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\user.reducers.js":"20","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Products\\index.js":"21","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\product.reducer.js":"22","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\index.js":"23","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js":"24","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js":"25","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\order.reducer.js":"26","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Orders\\index.js":"27","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\product.action.js":"28","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\initialData.action.js":"29","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Modal\\index.js":"30","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal.js":"31","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\AddCategoryModal.js":"32","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\NewPage\\index.js":"33","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\linearCategories.js":"34","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\page.action.js":"35"},{"size":1390,"mtime":1611147397591,"results":"36","hashOfConfig":"37"},{"size":2318,"mtime":1610824626157,"results":"38","hashOfConfig":"37"},{"size":3409,"mtime":1610734625512,"results":"39","hashOfConfig":"37"},{"size":1936,"mtime":1610728437306,"results":"40","hashOfConfig":"37"},{"size":968,"mtime":1610751230269,"results":"41","hashOfConfig":"37"},{"size":1207,"mtime":1611130580572,"results":"42","hashOfConfig":"37"},{"size":577,"mtime":1611089511759,"results":"43","hashOfConfig":"37"},{"size":362,"mtime":1610572131043,"results":"44","hashOfConfig":"37"},{"size":736,"mtime":1610728279710,"results":"45","hashOfConfig":"37"},{"size":314,"mtime":1611092544868,"results":"46","hashOfConfig":"37"},{"size":490,"mtime":1610751459854,"results":"47","hashOfConfig":"37"},{"size":2021,"mtime":1610749597773,"results":"48","hashOfConfig":"37"},{"size":1428,"mtime":1610749643786,"results":"49","hashOfConfig":"37"},{"size":156,"mtime":1610835753968,"results":"50","hashOfConfig":"37"},{"size":937,"mtime":1611150232521,"results":"51","hashOfConfig":"37"},{"size":1907,"mtime":1611136307847,"results":"52","hashOfConfig":"37"},{"size":447,"mtime":1610721617713,"results":"53","hashOfConfig":"37"},{"size":206,"mtime":1611137521823,"results":"54","hashOfConfig":"37"},{"size":799,"mtime":1610733613913,"results":"55","hashOfConfig":"37"},{"size":844,"mtime":1610734488200,"results":"56","hashOfConfig":"37"},{"size":8384,"mtime":1610836312803,"results":"57","hashOfConfig":"37"},{"size":409,"mtime":1610829610314,"results":"58","hashOfConfig":"37"},{"size":10390,"mtime":1611094358359,"results":"59","hashOfConfig":"37"},{"size":2849,"mtime":1611093781782,"results":"60","hashOfConfig":"37"},{"size":3528,"mtime":1611130529914,"results":"61","hashOfConfig":"37"},{"size":0,"mtime":1610751342247,"results":"62","hashOfConfig":"37"},{"size":203,"mtime":1610750874271,"results":"63","hashOfConfig":"37"},{"size":207,"mtime":1610806003153,"results":"64","hashOfConfig":"37"},{"size":685,"mtime":1610829572143,"results":"65","hashOfConfig":"37"},{"size":1102,"mtime":1611090022769,"results":"66","hashOfConfig":"37"},{"size":4636,"mtime":1611094496464,"results":"67","hashOfConfig":"37"},{"size":1779,"mtime":1611089538587,"results":"68","hashOfConfig":"37"},{"size":6019,"mtime":1611164588947,"results":"69","hashOfConfig":"37"},{"size":506,"mtime":1611164591666,"results":"70","hashOfConfig":"37"},{"size":784,"mtime":1611145768052,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"1fu8tsw",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js",["161"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Signup from './containers/Signup';\nimport Signin from './containers/Signin';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn, getInitialData } from './actions';\nimport Products from './containers/Products';\nimport Orders from './containers/Orders';\nimport Category from './containers/Category';\nimport NewPage from './containers/NewPage';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if (auth.authenticate) {\n      dispatch(getInitialData());\n    }\n\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute path=\"/page\" component={NewPage} />\n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n        <PrivateRoute path=\"/category\" component={Category} />\n\n\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n",["162","163"],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.js",["164"],"import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {signout} from '../../actions';\r\n\r\nexport default function Header(props) {\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () =>{\r\n        dispatch(signout());\r\n    };\r\n\r\n    const renderLoggedInLinks = () => {\r\n        return (\r\n            <Nav>\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link\" onClick={logout}>Signout</span>\r\n                </li>\r\n\r\n            </Nav>\r\n        );\r\n    };\r\n\r\n    const renderNonLoggedInLinks = () => {\r\n        return (\r\n            <Nav>\r\n                {/* <Nav.Link href=\"#deets\">Signin</Nav.Link> */}\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"/signin\" className=\"nav-link\" >Signin</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"/signup\" className=\"nav-link\" >Signup</NavLink>\r\n                </li>\r\n\r\n            </Nav>\r\n        );\r\n    };\r\n\r\n    return (\r\n\r\n        <Navbar collapseOnSelect fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\" style={{ zIndex: 1 }}>\r\n            <Container fluid>\r\n                <Link to=\"/\" className=\"navbar-brand\">Admin Dashboard</Link>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n            </NavDropdown> */}\r\n                    </Nav>\r\n                {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks() }\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signup\\index.js",["165","166"],"import React, {useState} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {signup} from '../../actions';\r\n\r\nexport default function Signup(props) {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const auth = useSelector(state => state.auth);\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignup = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            firstName, lastName, email, password\r\n        }\r\n\r\n        dispatch(signup(user));\r\n    }\r\n\r\n    if (auth.authenticate) {\r\n        return <Redirect to={`/`} />\r\n    }\r\n\r\n    if(user.loading){\r\n        return <p>Loading...!</p>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                {user.message}\r\n                <Row style={{ marginTop: '50px' }}>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form onSubmit={userSignup}>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Input\r\n                                        label=\"First Name\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={firstName}\r\n                                        type=\"text\"\r\n                                        onChange={(e) => setFirstName(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <Input\r\n                                        label=\"Last Name\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={lastName}\r\n                                        type=\"text\"\r\n                                        onChange={(e) => setLastName(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Input\r\n                                label=\"Email\"\r\n                                placeholder=\"Email\"\r\n                                value={email}\r\n                                type=\"email\"\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n\r\n                            <Input\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                type=\"password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                    </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n",["167","168"],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Signin\\index.js",["169","170"],"import { React, useState } from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { Container, Form, Row, Col, Button} from 'react-bootstrap'\r\nimport Input from '../../components/UI/Input'\r\nimport { login } from '../../actions';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default function Signin(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            email, password\r\n        }\r\n        dispatch(login(user));\r\n    }\r\n\r\n    if(auth.authenticate){\r\n        return <Redirect to={`/`} /> \r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Row style= {{marginTop : '50px'}}>\r\n                    <Col md={{span:6, offset:3}}>\r\n                    <Form onSubmit={userLogin} >\r\n                    <Input \r\n                        label = \"Email\"\r\n                        placeholder = \"Email\"\r\n                        value = {email}\r\n                        type = \"email\"\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    <Input \r\n                        label = \"Password\"\r\n                        placeholder = \"Password\"\r\n                        value = {password}\r\n                        type = \"password\"\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Home\\index.js",["171","172","173","174","175"],"import React from 'react';\r\nimport {Container, Jumbotron, Row, Col} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Layout from '../../components/Layout';\r\nimport './style.css';\r\nexport default function Home(props) {\r\n    \r\n    return (\r\n        <Layout sidebar>\r\n            \r\n\r\n            {/* <Jumbotron style={ { margin:'5rem' , background : '#fff'} }  className=\"text-center\">\r\n                <h1>Welcome to Admin Dashboard</h1>\r\n                <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a sear</p>\r\n            </Jumbotron> */}\r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Input\\index.js",[],["176","177"],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reportWebVitals.js",[],["178","179"],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\store\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\auth.actions.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\auth.reducers.js",["180","181"],"import { authConstants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    token: null,\r\n    user: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        picture: '',\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error : null,\r\n    message : ''\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case authConstants.LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                authenticate: true,\r\n                authenticating: false,\r\n\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_REQUEST:\r\n            state = {\r\n                ...initState,\r\n                loading: true\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error : action.payload.error,\r\n                loading : false\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n    return state;\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\constants.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js",["182"],"import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component : Component, ...rest}) => {\r\n    return <Route {...rest} component = {(props) => {\r\n        const token = window.localStorage.getItem('token');\r\n        if(token){\r\n            return <Component{...props}/>\r\n        }else{\r\n            return <Redirect to = {`\\signin`} />\r\n        }\r\n    }} />\r\n}\r\n\r\n\r\nexport default PrivateRoute;","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js",["183"],"import axios from \"../helpers/axios\"\r\nimport { userConstants } from \"./constants\"\r\n\r\nexport const signup = (user) => {\r\n\r\n    console.log(user);\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({type: userConstants.USER_REGISTER_REQUEST});\r\n        const res = await axios.post('/admin/signup',{\r\n            ...user\r\n        });\r\n\r\n        if(res.status === 201){\r\n            const {message} = res.data;\r\n            dispatch({\r\n                type: userConstants.USER_REGISTER_SUCCESS,\r\n                payload:{}\r\n            });\r\n        }else {\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: userConstants.USER_REGISTER_FAILURE,\r\n                    payload: {error : res.data.error}\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\user.reducers.js",["184","185"],"import { userConstants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    error : null,\r\n    message : '',\r\n    loading : false,\r\n}\r\n\r\nexport default (state = initState, action) =>{\r\n    switch(action.type){\r\n        case userConstants.USER_REGISTER_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading:false,\r\n                message : action.payload.message\r\n            }\r\n            break;\r\n        case userConstants.USER_REGISTER_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error : action.payload.error\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Products\\index.js",["186","187"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Layout from '../../components/Layout';\r\nimport Input from '../../components/UI/Input';\r\nimport Modal from '../../components/UI/Modal';\r\nimport { Col, Container, Row, Table } from 'react-bootstrap';\r\nimport { addProduct } from '../../actions';\r\nimport './style.css';\r\nimport { generatePublicUrl } from '../../urlConfig';\r\n\r\nexport default function Products(props) {\r\n    const [productDetailModal, setProductDetailModal] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [productDetails, setProductDetails] = useState(null);\r\n    const [productPictures, setProductPictures] = useState([]);\r\n    const product = useSelector(state => state.product);\r\n    const category = useSelector(state => state.category);\r\n    const dispatch = useDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const handleClose = () => {\r\n        const form = new FormData();\r\n        form.append('name', name);\r\n        form.append('quantity', quantity);\r\n        form.append('price', price);\r\n        form.append('description', description);\r\n        form.append('category', categoryId);\r\n\r\n        for (let pic of productPictures) {\r\n            form.append('productPicture', pic);\r\n        }\r\n\r\n        dispatch(addProduct(form));\r\n\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    const handleProductPictures = (e) => {\r\n        setProductPictures([\r\n            ...productPictures,\r\n            e.target.files[0]\r\n        ]);\r\n    }\r\n\r\n    const renderProducts = () => {\r\n        return (\r\n            <Table style={{fontSize:12}} responsive=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Category</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        product.products.length > 0 ?\r\n                            product.products.map(product =>\r\n                                <tr onClick={() => showProductDetailsModal(product)} key={product._id}>\r\n                                    <td>2</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.quantity}</td>\r\n                                    <td>{product.category.name}</td>\r\n                                </tr>\r\n                            ) : null\r\n                    }\r\n\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n\r\n    const renderAddProductModal = () => {\r\n        return (\r\n            <Modal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                modelTitle={'Add New Products'}\r\n            >\r\n                <Input\r\n                    label=\"name\"\r\n                    value={name}\r\n                    placeholder={`Product Name`}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"quantity\"\r\n                    value={quantity}\r\n                    placeholder={`Quantity Name`}\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"price\"\r\n                    value={price}\r\n                    placeholder={`Price Name`}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n                <Input\r\n                    label=\"description\"\r\n                    value={description}\r\n                    placeholder={`Description Name`}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n                <select className=\"form-control\"\r\n                    value={categoryId}\r\n                    onChange={(e) => setCategoryId(e.target.value)} >\r\n                    <option>select category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}> {option.name} </option>)\r\n                    }\r\n                </select>\r\n                {\r\n                    productPictures.length > 0 ?\r\n                        productPictures.map((pic, index) => <div key={index} >{pic.name} </div>) : null\r\n                }\r\n                <input type=\"file\" name=\"productPicture\" onChange={handleProductPictures} />\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const handleCloseProductDetailsModal = () => {\r\n        setProductDetailModal(false);\r\n    }\r\n    const showProductDetailsModal = (product) => {\r\n        setProductDetails(product);\r\n        setProductDetailModal(true);\r\n    }\r\n    const renderProductDetailsModal = () => {\r\n\r\n        if(!productDetails){\r\n            return null;\r\n        }\r\n        \r\n        return(\r\n            <Modal\r\n            show = {productDetailModal}\r\n            handleClose = {handleCloseProductDetailsModal}\r\n            modelTitle={'Product Details'}\r\n            size = \"lg\"\r\n            >\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <label className=\"key\" >Name</label>\r\n                        <p className= \"value\" >{productDetails.name}</p>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <label className=\"key\" >Price</label>\r\n                        <p className= \"value\" >{productDetails.price}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <label className=\"key\" >Quantity</label>\r\n                        <p className= \"value\" >{productDetails.quantity}</p>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <label className=\"key\" >Category</label>\r\n                        <p className= \"value\" >{productDetails.category.name} </p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <label className=\"key\" >Description</label>\r\n                        <p className= \"value\" >{productDetails.description}</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label className = \"key\">Product Pictures</label>\r\n                        <div style={{display : \"flex\"}}>\r\n                        {productDetails.productPictures.map(picture => \r\n                        <div className = \"productImgContainer\">\r\n                            <img src = {generatePublicUrl(picture.img)} />\r\n                        </div>\r\n                        )}\r\n                        </div>\r\n                        \r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Products</h3>\r\n                            <button onClick={handleShow}>Add</button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {renderProducts()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {renderAddProductModal()};\r\n            {renderProductDetailsModal()};\r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\product.reducer.js",["188","189"],"import { productConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    products : []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                products : action.payload.products\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\index.js",["190","191","192","193","194","195","196","197","198","199"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Container, Row, Button } from 'react-bootstrap';\r\nimport Layout from '../../components/Layout';\r\nimport Input from '../../components/UI/Input';\r\nimport {\r\n    gettAllCategory,\r\n    addCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions/category.action';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosCloudUpload,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n} from 'react-icons/io';\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\r\nimport AddCategoryModal from './components/AddCategoryModal';\r\nimport './style.css';\r\n\r\nexport default function Category(props) {\r\n    const category = useSelector(state => state.category);\r\n    const [show, setShow] = useState(false);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        const form = new FormData();\r\n\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setCategoryImage('');\r\n\r\n        // const cat = {\r\n        //     categoryName,\r\n        //     parentCategoryId,\r\n        //     categoryImage,\r\n        // };\r\n        setShow(false);\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n\r\n        return myCategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({ \r\n                value: category._id, \r\n                name: category.name, \r\n                parentId: category.parentId,\r\n                type : category.type           \r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n    const updateCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setUpdateCategoryModal(true);\r\n\r\n    }\r\n\r\n    const updateCheckedAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value)\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value)\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n        console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n    }\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n    }\r\n\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        });\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        });\r\n        dispatch(updateCategories(form));\r\n\r\n        setUpdateCategoryModal(false);\r\n    }\r\n\r\n    \r\n\r\n    const deleteCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n\r\n    const deleteCategories = () => {\r\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expanedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expanedIdsArray.concat(checkedIdsArray);\r\n        if (checkedIdsArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdsArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(gettAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                });\r\n        }\r\n        setDeleteCategoryModal(false);\r\n    }\r\n\r\n    const renderDeleteCategoryModel = () => {\r\n\r\n        console.log('delete', checkedArray);\r\n\r\n        return (\r\n            <Modal\r\n                modelTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            alert('no');\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n                    }\r\n                ]}\r\n            >\r\n                <h5>Expanded</h5>\r\n                {\r\n                    expandedArray.map((item, index) => <span key={index}> {item.name} </span>)\r\n                }\r\n                <h5>Checked</h5>\r\n                {\r\n                    checkedArray.map((item, index) => <span key={index}> {item.name} </span>)\r\n                }\r\n\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const categoryList = createCategoryList(category.categories);\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <span>Actions : </span>\r\n                                <button onClick={handleShow}><IoIosAdd/><span>Add</span></button>\r\n                                <button onClick={deleteCategory}><IoIosTrash/><span>Delete</span></button>\r\n                                <button onClick={updateCategory}><IoIosCloudUpload/><span>Edit</span></button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <AddCategoryModal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                modelTitle={'Add New Category'}\r\n                size=\"lg\"                \r\n                categoryName = {categoryName}\r\n                setCategoryName = {setCategoryName}\r\n                parentCategoryId = {parentCategoryId}\r\n                setParentCategoryId = {setParentCategoryId}\r\n                categoryList = {categoryList}\r\n                handleCategoryImage = {handleCategoryImage}\r\n            />\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={updateCategoriesForm}\r\n                modelTitle={'Update Category'}\r\n                size=\"lg\"\r\n                expandedArray = {expandedArray}\r\n                checkedArray = {checkedArray}\r\n                handleCategoryInput = {handleCategoryInput}\r\n                categoryList = {categoryList}\r\n            />            \r\n            {/* {renderAddCategoryModal()} */}\r\n            {renderDeleteCategoryModel()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js",["200"],"import axios from \"../helpers/axios\";\r\nimport { categoryConstants } from \"./constants\";\r\n\r\nconst gettAllCategory = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n\r\n            const { categoryList } = res.data;\r\n\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({type : categoryConstants.UPDATE_CATEGORIES_REQUEST});\r\n        const res = await axios.post(`/category/update`, form);\r\n        if (res.status === 201) {\r\n            dispatch({type : categoryConstants.UPDATE_CATEGORIES_SUCCESS});\r\n            dispatch(gettAllCategory());\r\n            return true;\r\n        } else {\r\n            const { error } = res;\r\n            dispatch({\r\n                type : categoryConstants.UPDATE_CATEGORIES_FAILURE,\r\n                payload : {error}\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        dispatch({type :categoryConstants.DELETE_CATEGORIES_REQUEST});\r\n        const res = await axios.post(`/category/delete`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n        if (res.status == 201) {\r\n            dispatch(gettAllCategory())\r\n            dispatch({type : categoryConstants.DELETE_CATEGORIES_SUCCESS});\r\n        }\r\n        else {\r\n            const {error} = res.data;\r\n            dispatch({\r\n                type : categoryConstants.DELETE_CATEGORIES_FAILURE,\r\n                payload : {error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    gettAllCategory\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js",["201","202","203"],"import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if (parentId === undefined) {\r\n        return [\r\n            ...categories, {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type : category.type,\r\n                children: [],\r\n            }\r\n        ]\r\n    }\r\n\r\n    for (let cat of categories) {\r\n\r\n        if (cat._id == parentId) {\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type : category.type,\r\n                children: []\r\n            };\r\n\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        } else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return myCategories;\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category;\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n            console.log(updatedCategories);\r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState,\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.UPDATE_CATEGORIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading : false\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.DELETE_CATEGORIES_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading : false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\order.reducer.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Orders\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\product.action.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\initialData.action.js",["204"],"import axios from \"../helpers/axios\";\r\nimport { categoryConstants, initialDataConstants , productConstants} from \"./constants\";\r\n\r\nexport const getInitialData = () => {\r\n    return async dispatch => {\r\n\r\n        const res = await axios.post(`/initialData`);\r\n        if(res.status===200){\r\n            const {categories, products} = res.data;\r\n            dispatch({\r\n                type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload:{categories}\r\n            });\r\n            dispatch({\r\n                type : productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n                payload : {products}\r\n            });\r\n\r\n        }\r\n        console.log(res);\r\n    }\r\n}","C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Modal\\index.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\Category\\components\\AddCategoryModal.js",[],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\containers\\NewPage\\index.js",["205","206"],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\linearCategories.js",["207"],"C:\\Users\\Talha\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\page.action.js",[],{"ruleId":"208","severity":1,"message":"209","line":28,"column":6,"nodeType":"210","endLine":28,"endColumn":25,"suggestions":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":2,"column":23,"nodeType":"218","messageId":"219","endLine":2,"endColumn":34},{"ruleId":"216","severity":1,"message":"220","line":15,"column":12,"nodeType":"218","messageId":"219","endLine":15,"endColumn":17},{"ruleId":"216","severity":1,"message":"221","line":15,"column":19,"nodeType":"218","messageId":"219","endLine":15,"endColumn":27},{"ruleId":"212","replacedBy":"222"},{"ruleId":"214","replacedBy":"223"},{"ruleId":"216","severity":1,"message":"220","line":13,"column":12,"nodeType":"218","messageId":"219","endLine":13,"endColumn":17},{"ruleId":"216","severity":1,"message":"221","line":13,"column":19,"nodeType":"218","messageId":"219","endLine":13,"endColumn":27},{"ruleId":"216","severity":1,"message":"224","line":2,"column":9,"nodeType":"218","messageId":"219","endLine":2,"endColumn":18},{"ruleId":"216","severity":1,"message":"225","line":2,"column":20,"nodeType":"218","messageId":"219","endLine":2,"endColumn":29},{"ruleId":"216","severity":1,"message":"226","line":2,"column":31,"nodeType":"218","messageId":"219","endLine":2,"endColumn":34},{"ruleId":"216","severity":1,"message":"227","line":2,"column":36,"nodeType":"218","messageId":"219","endLine":2,"endColumn":39},{"ruleId":"216","severity":1,"message":"228","line":3,"column":10,"nodeType":"218","messageId":"219","endLine":3,"endColumn":17},{"ruleId":"212","replacedBy":"229"},{"ruleId":"214","replacedBy":"230"},{"ruleId":"212","replacedBy":"231"},{"ruleId":"214","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":18,"column":1,"nodeType":"235","endLine":61,"endColumn":2},{"ruleId":"236","severity":1,"message":"237","line":22,"column":5,"nodeType":"238","messageId":"239","endLine":58,"endColumn":6},{"ruleId":"240","severity":1,"message":"241","line":10,"column":37,"nodeType":"242","messageId":"243","endLine":10,"endColumn":38,"suggestions":"244"},{"ruleId":"216","severity":1,"message":"245","line":16,"column":20,"nodeType":"218","messageId":"219","endLine":16,"endColumn":27},{"ruleId":"233","severity":1,"message":"234","line":9,"column":1,"nodeType":"235","endLine":34,"endColumn":2},{"ruleId":"236","severity":1,"message":"237","line":10,"column":5,"nodeType":"238","messageId":"239","endLine":31,"endColumn":6},{"ruleId":"216","severity":1,"message":"246","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":197,"column":29,"nodeType":"249","endLine":197,"endColumn":75},{"ruleId":"233","severity":1,"message":"234","line":7,"column":1,"nodeType":"235","endLine":18,"endColumn":2},{"ruleId":"236","severity":1,"message":"237","line":8,"column":5,"nodeType":"238","messageId":"239","endLine":15,"endColumn":6},{"ruleId":"216","severity":1,"message":"246","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"250","line":3,"column":31,"nodeType":"218","messageId":"219","endLine":3,"endColumn":37},{"ruleId":"216","severity":1,"message":"251","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":13},{"ruleId":"252","severity":1,"message":"253","line":110,"column":79,"nodeType":"254","messageId":"255","endLine":110,"endColumn":81},{"ruleId":"252","severity":1,"message":"253","line":114,"column":79,"nodeType":"254","messageId":"255","endLine":114,"endColumn":81},{"ruleId":"252","severity":1,"message":"253","line":123,"column":18,"nodeType":"254","messageId":"255","endLine":123,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":124,"column":82,"nodeType":"254","messageId":"255","endLine":124,"endColumn":84},{"ruleId":"252","severity":1,"message":"253","line":126,"column":25,"nodeType":"254","messageId":"255","endLine":126,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":127,"column":84,"nodeType":"254","messageId":"255","endLine":127,"endColumn":86},{"ruleId":"216","severity":1,"message":"256","line":161,"column":15,"nodeType":"218","messageId":"219","endLine":161,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":78,"column":24,"nodeType":"254","messageId":"255","endLine":78,"endColumn":26},{"ruleId":"252","severity":1,"message":"253","line":26,"column":21,"nodeType":"254","messageId":"255","endLine":26,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":53,"column":1,"nodeType":"235","endLine":124,"endColumn":2},{"ruleId":"236","severity":1,"message":"237","line":54,"column":5,"nodeType":"238","messageId":"239","endLine":122,"endColumn":6},{"ruleId":"216","severity":1,"message":"257","line":2,"column":29,"nodeType":"218","messageId":"219","endLine":2,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":29,"column":66,"nodeType":"254","messageId":"255","endLine":29,"endColumn":68},{"ruleId":"258","severity":1,"message":"259","line":86,"column":90,"nodeType":"260","endLine":86,"endColumn":92},{"ruleId":"216","severity":1,"message":"261","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["262"],"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["263"],["264"],"'Container' is defined but never used.","'Jumbotron' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavLink' is defined but never used.",["263"],["264"],["263"],["264"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-escape","Unnecessary escape character: \\s.","TemplateElement","unnecessaryEscape",["265","266"],"'message' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Input' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'idsArray' is assigned a value but never used.","'initialDataConstants' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'React' is defined but never used.",{"desc":"267","fix":"268"},"no-global-assign","no-unsafe-negation",{"messageId":"269","fix":"270","desc":"271"},{"messageId":"272","fix":"273","desc":"274"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"275","text":"276"},"removeEscape",{"range":"277","text":"278"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"279","text":"280"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[854,873],"[auth.authenticate, dispatch]",[376,377],"",[376,376],"\\"]